title mminiprojet2

.model small

.stack 100h
.386

.data 
msg1 db  0dh,0ah,"SUCCES DE DEROULEMENT DE L INTERRUPTION int 20h ",'$' 
msg3 db  0dh,0ah,"verifier votre choix svp!!!!",'$'
msg4 db  0dh,0ah," programme va se fermer ",'$'
break db 10,13,"appuyer sur une touche pour sortir","$"
message2 DB 0dh,0ah," appuyer sur  (y) pour continuer (n) pour quitter :  ","$"

.code

fin_propre macro 
       
       ;restaurer l'ancien vecteur d'interruption     
       pop es 
       pop bx
       
       mov al,20h
       mov ah,25h
       int 21h 

       mov dx,bx
       int 21h

       mov bx,es
       int 21h

       ;appel systeme de l'interruption 20h
      
       int 20h



endm

routine_detournement proc

debut:

MOV AH,9

LEA DX,message2

int 21h

Mov AH,1

Int 21h

cmp al,'n'

jne continue
fin_propre


iret

continue:

cmp al,'y'

jne debut
call aff_msg



ret

routine_detournement endp

aff_msg proc 
          ;enregistrer ds cx le nbr de fois a repeter le msg 
          mov cx,5

          boucle:

          mov ah,09
          mov dx,offset msg4
          int 21h

          loop boucle
          
          ret

aff_msg endp







success_det macro msg

        mov ah,09
        mov dx,offset msg1
        int 21h

endm




new_routine proc
        
        success_det msg
        call routine_detournement 
       
        
        ret

new_routine endp



redirect_int macro new_routine
       
       ;lecture du vecteur d'interruption        
       
       mov al,20h
       mov ah,35h
       
       ;sauvgarder les vecteur reels de l'int 20h
       
       push bx
       push es
       
       lea dx,new_routine
       mov al,20h
       mov ah,25h
       int 21h
       

endm 

main proc 
        
        mov ax,@data
        mov ds,ax
       
        redirect_int new_routine 
        call new_routine
         
        int 21h
        
               
mov ah,09h
mov dx,offset break
int 21h

mov ah,1
int 21h 
mov ax,4c00h
int 21h


.exit 
main endp 
end main